{
    "version": "https://jsonfeed.org/version/1",
    "title": "卓软信息工作室 • All posts by \"报错信息\" category",
    "description": "",
    "home_page_url": "https://zrgzs.github.io/guide",
    "items": [
        {
            "id": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/Hutool%E7%9A%84BeanUtil.copyProperties%E7%9A%84ignoreNullValue%E4%B8%8D%E7%94%9F%E6%95%88/",
            "url": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/Hutool%E7%9A%84BeanUtil.copyProperties%E7%9A%84ignoreNullValue%E4%B8%8D%E7%94%9F%E6%95%88/",
            "title": "Hutool的BeanUtil.copyProperties的ignoreNullValue不生效",
            "date_published": "2023-09-07T09:59:14.000Z",
            "content_html": "<h2 id=\"1-问题描述\"><a class=\"markdownIt-Anchor\" href=\"#1-问题描述\">#</a> 1、问题描述</h2>\n<p>在学习 redis 做黑马点评项目的时候，有个是根据 ID 获取商铺信息的，我使用的是 hash 结构，需要将实体类转化为 map 结构，我使用的是 hutool 工具类提供的 BeanUtil，以下是我的代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">String</span> shopKey <span class=\"token operator\">=</span> <span class=\"token constant\">CACHE_SHOP_KEY</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 1、从 redis 缓存中获取商铺信息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> shopMap <span class=\"token operator\">=</span> stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 2、判断缓存是否命中</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>shopMap<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">// 2.1 命中直接返回商铺信息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">Shop</span> shop <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">fillBeanWithMap</span><span class=\"token punctuation\">(</span>shopMap<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 2.2 未命中从数据库中查询商铺信息</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">Shop</span> shop <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 2.2.1 判断数据库中是否有当前商铺的信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">ObjectUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 2.2.1.1 数据库中存在当前商铺信息，缓存至 redis, 后返回</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> sqlShopMap <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">beanToMap</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token class-name\">CopyOptions</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">setIgnoreNullValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValueEditor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>filedName<span class=\"token punctuation\">,</span> filedValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> filedValue<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">,</span> sqlShopMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">,</span> <span class=\"token constant\">CACHE_SHOP_TTL</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// 2.2.1.2 数据库中无当前商铺信息，缓存空值到 redis 中</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以看到明明是 setIgnoreNullValue (true) 设置了忽略 Null 值，但是还是会报空指针异常：</p>\n<figure class=\"highlight latex\"><figcaption data-lang=\"LaTeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>java.lang.NullPointerException: null</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tat com.hmdp.service.impl.ShopServiceImpl.lambda<span class=\"token equation string\">$queryById$</span>0(ShopServiceImpl.java:61) ~<span class=\"token punctuation\">[</span>classes/:na<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tat cn.hutool.core.bean.copier.CopyOptions.editFieldValue(CopyOptions.java:258) ~<span class=\"token punctuation\">[</span>hutool-all-5.7.17.jar:na<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tat cn.hutool.core.bean.copier.BeanCopier.lambda<span class=\"token equation string\">$beanToMap$</span>1(BeanCopier.java:233) ~<span class=\"token punctuation\">[</span>hutool-all-5.7.17.jar:na<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\tat java.util.LinkedHashMap$LinkedValues.forEach(LinkedHashMap.java:608) ~<span class=\"token punctuation\">[</span>na:1.8.0_371<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tat cn.hutool.core.bean.BeanUtil.descForEach(BeanUtil.java:182) ~<span class=\"token punctuation\">[</span>hutool-all-5.7.17.jar:na<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tat cn.hutool.core.bean.copier.BeanCopier.beanToMap(BeanCopier.java:195) ~<span class=\"token punctuation\">[</span>hutool-all-5.7.17.jar:na<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tat cn.hutool.core.bean.copier.BeanCopier.copy(BeanCopier.java:106) ~<span class=\"token punctuation\">[</span>hutool-all-5.7.17.jar:na<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tat cn.hutool.core.bean.BeanUtil.beanToMap(BeanUtil.java:690) ~<span class=\"token punctuation\">[</span>hutool-all-5.7.17.jar:na<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tat com.hmdp.service.impl.ShopServiceImpl.queryById(ShopServiceImpl.java:58) ~<span class=\"token punctuation\">[</span>classes/:na<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h2 id=\"2-出错原因\"><a class=\"markdownIt-Anchor\" href=\"#2-出错原因\">#</a> 2、出错原因</h2>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220344.jpg\" alt=\"image.png\">1、这是由于 setFieldValueEditor 优先级要高于 ignoreNullValue 导致前者首先被触发，因此出现空指针问题。需要在 setFieldValueEditor 中也需要判空。2、这么设计的原因主要是，如果原值确实是 null，但是你想给一个默认值，在此前过滤掉就不合理了，而你的值编辑后转换为 null，后置的判断就会过滤掉。</p>\n<h2 id=\"3-如何解决\"><a class=\"markdownIt-Anchor\" href=\"#3-如何解决\">#</a> 3、如何解决？</h2>\n<p>简单来说就是在 setFieldValueEditor 方法的时候，也进行判断一下空值<img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220350.jpg\" alt=\"image.png\"> 这样判空一下就可以了。</p>\n",
            "tags": []
        },
        {
            "id": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/Redis%E5%8F%96%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99%EF%BC%9Aorg.springframework.data.redis.RedisSystemException_%20Error%20in%20execution;%20nested%20exception%20is%20io.lettuce.core.RedisCom/",
            "url": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/Redis%E5%8F%96%E6%95%B0%E6%8D%AE%E6%8A%A5%E9%94%99%EF%BC%9Aorg.springframework.data.redis.RedisSystemException_%20Error%20in%20execution;%20nested%20exception%20is%20io.lettuce.core.RedisCom/",
            "title": "Redis取数据报错：org.springframework.data.redis.RedisSystemException_ Error in execution; nested exception is io.lettuce.core.RedisCom",
            "date_published": "2023-09-07T09:59:14.000Z",
            "content_html": "<h2 id=\"1-问题描述\"><a class=\"markdownIt-Anchor\" href=\"#1-问题描述\">#</a> 1、问题描述</h2>\n<p>我的代码是这样的：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 缓存穿透，存储 Hash</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @param keyPrefix  前缀</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @param id         唯一 ID</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * @param classType  存储类型</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     * @param dbFallback 回调函数，查询数据库</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     * @param cacheTtl   过期时间</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * @param unit       过期时间单位</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     * @param &lt;R>        返回值值类型</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     * @param &lt;K>        ID 类型</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     * @return R</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span>  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">K</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">R</span> <span class=\"token function\">queryWithPassThroughForHash</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> keyPrefix<span class=\"token punctuation\">,</span> <span class=\"token class-name\">K</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> classType<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Function</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">K</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> dbFallback<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Long</span> cacheTtl<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span> unit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">String</span> key <span class=\"token operator\">=</span> keyPrefix <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 1、从 redis 缓存中获取商铺信息</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> objectMap <span class=\"token operator\">=</span> stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 2、判断缓存是否命中，解决缓存穿透的问题上，shopMap 可能为空的 Map，或者是空的 HashMap</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>objectMap<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// 2.1 命中转化为 shop 对象 直接返回商铺信息</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">R</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                r <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">fillBeanWithMap</span><span class=\"token punctuation\">(</span>objectMap<span class=\"token punctuation\">,</span> classType<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InstantiationException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">IllegalAccessException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\">// 2.1.1 如果 shop 中的所有属性均为 null，那么代表没有这个店铺信息</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token comment\">// 2.1.2 否则返回转化后的商铺信息</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 2.2 未命中从数据库中查询商铺信息</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">R</span> r <span class=\"token operator\">=</span> dbFallback<span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">// 2.2.1 判断数据库中是否有当前商铺的信息</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ObjectUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token comment\">// 2.2.1.2 数据库中无当前商铺信息，缓存空值到 redis 中</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token constant\">CACHE_NULL_TTL</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">// 2.2.1.1 数据库中存在当前商铺信息，缓存至 redis, 后返回</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> sqlObjectMap <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">beanToMap</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token class-name\">CopyOptions</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">setIgnoreNullValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValueEditor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>filedName<span class=\"token punctuation\">,</span> filedValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                                filedValue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> filedValue<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> sqlObjectMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> cacheTtl<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但是在取数据的时候就报错:<img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220358.jpg\" alt=\"image.png\"></p>\n<h2 id=\"2-问题原因\"><a class=\"markdownIt-Anchor\" href=\"#2-问题原因\">#</a> 2、问题原因</h2>\n<p>原来是 redis 中在已经存储过 String 类型的了<img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220401.jpg\" alt=\"image.png\"> 在取数据转换成 Map 就会报错了呗。</p>\n<h2 id=\"3-解决方式\"><a class=\"markdownIt-Anchor\" href=\"#3-解决方式\">#</a> 3、解决方式：</h2>\n<p>①删除 redis 中已经存在的类型不一致的 KEY,②转换成类型一致的呗</p>\n",
            "tags": []
        },
        {
            "id": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/MySQL%E5%BB%BA%E8%A1%A8%E6%8A%A5%E9%94%99Invalid%20default%20value%20for%20%E2%80%98begin_time%E2%80%98/",
            "url": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/MySQL%E5%BB%BA%E8%A1%A8%E6%8A%A5%E9%94%99Invalid%20default%20value%20for%20%E2%80%98begin_time%E2%80%98/",
            "title": "MySQL建表报错Invalid default value for ‘begin_time‘",
            "date_published": "2023-09-07T09:59:14.000Z",
            "content_html": "<p>我在建表的时候：</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_blog<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>tb_blog<span class=\"token punctuation\">`</span></span>  <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'主键'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>shop_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'商户id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user_id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">bigint</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'用户id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>title<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'标题'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>images<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_general_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'探店的照片，最多9张，多张以\\\",\\\"隔开'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>content<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">2048</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> utf8mb4_unicode_ci <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'探店的文字描述'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>liked<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'点赞数量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>comments<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNSIGNED</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'评论数量'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>create_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'创建时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                            <span class=\"token identifier\"><span class=\"token punctuation\">`</span>update_time<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span> <span class=\"token keyword\">COMMENT</span> <span class=\"token string\">'更新时间'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                            <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">USING</span> <span class=\"token keyword\">BTREE</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">AUTO_INCREMENT</span> <span class=\"token operator\">=</span> <span class=\"token number\">23</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> <span class=\"token operator\">=</span> utf8mb4 <span class=\"token keyword\">COLLATE</span> <span class=\"token operator\">=</span> utf8mb4_general_ci ROW_FORMAT <span class=\"token operator\">=</span> Compact<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>执行这段语句报错，报错信息为：<img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220353.jpg\" alt=\"image.png\"> 这个报错是由于 MySQL 的严格模式导致的，解决方式：在命令行中执行 sql_mode:</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SET</span> <span class=\"token keyword\">SESSION</span> sql_mode <span class=\"token operator\">=</span><span class=\"token string\">'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这样再执行 SQL 语句就不会报错了。</p>\n",
            "tags": []
        },
        {
            "id": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/%E4%BD%BF%E7%94%A8Hash%E7%BB%93%E6%9E%84%E7%BC%93%E5%AD%98%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E9%97%AE%E9%A2%98%EF%BC%9F/",
            "url": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/%E4%BD%BF%E7%94%A8Hash%E7%BB%93%E6%9E%84%E7%BC%93%E5%AD%98%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E9%97%AE%E9%A2%98%EF%BC%9F/",
            "title": "使用Hash结构缓存对象，如何解决缓存穿透问题？",
            "date_published": "2023-09-07T09:59:14.000Z",
            "content_html": "<h2 id=\"1-问题描述\"><a class=\"markdownIt-Anchor\" href=\"#1-问题描述\">#</a> 1、问题描述</h2>\n<p>了解了缓存穿透问题后，我就想着使用 hash 结构存储对象。如果用户请求的 ID 不存在的时候，需要在 redis 缓存中缓存 NULL 值，这样显然是不可行的，因为使用通过 entities 返回的类型任然是 Map 类型，不是 null。</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220406.jpg\" alt=\"image.png\"></p>\n<p>StringRedisTemplate 会创建一个空 Map，使用无法通过类似 string 结构的 ！= null 来判断数据是否在缓存中。</p>\n<h3 id=\"2-解决方案\"><a class=\"markdownIt-Anchor\" href=\"#2-解决方案\">#</a> 2、解决方案</h3>\n<p>我们可以在根据 ID 获取到的实体信息时不使用 putAll () 方法，我们直接使用 put（key,hashKey,value）方法，我们缓存的 hashKey 和 value 信息为空字符串，这样我们在请求打到缓存上的时候虽然 map 不是为空，但是我们结合 hutool 工具包来转换后的实体信息中的所有属性均为 NULL，这样我们就可以返回给前端实体不存在，转化后的实体属性如果不为 NULL，则说明实体信息是存在的。例如：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">queryById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">String</span> shopKey <span class=\"token operator\">=</span> <span class=\"token constant\">CACHE_SHOP_KEY</span> <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 1、从 redis 缓存中获取商铺信息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> shopMap <span class=\"token operator\">=</span> stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 2、判断缓存是否命中，解决缓存穿透的问题上，shopMap 可能为空的 Map，或者是空的 HashMap</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>shopMap<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">// 2.1 命中转化为 shop 对象 直接返回商铺信息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">Shop</span> shop <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">fillBeanWithMap</span><span class=\"token punctuation\">(</span>shopMap<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">// 2.1.1 如果 shop 中的所有属性均为 null，那么代表没有这个店铺信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"店铺不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// 2.1.2 否则返回转化后的商铺信息</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 2.2 未命中从数据库中查询商铺信息</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">Shop</span> shop <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 2.2.1 判断数据库中是否有当前商铺的信息</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ObjectUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// 2.2.1.2 数据库中无当前商铺信息，缓存空值到 redis 中</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">,</span> <span class=\"token constant\">CACHE_NULL_TTL</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"店铺不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 2.2.1.1 数据库中存在当前商铺信息，缓存至 redis, 后返回</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> sqlShopMap <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">beanToMap</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token class-name\">CopyOptions</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">setIgnoreNullValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValueEditor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>filedName<span class=\"token punctuation\">,</span> filedValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                                filedValue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> filedValue<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">,</span> sqlShopMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span>shopKey<span class=\"token punctuation\">,</span> <span class=\"token constant\">CACHE_SHOP_TTL</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>shop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>通过 hutool 的 BeanUtil.isEmpty (Object obj) 来判断实体的属性是否全部为空。<img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220411.jpg\" alt=\"image.png\"></p>\n",
            "tags": []
        },
        {
            "id": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/%E4%BD%BF%E7%94%A8StringRedisTemplate%E6%8A%A5%E9%94%99%EF%BC%9Ajava.lang.ClassCastException_%20java.lang.Long%20cannot%20be%20cast%20to%20java.lang.String/",
            "url": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/%E4%BD%BF%E7%94%A8StringRedisTemplate%E6%8A%A5%E9%94%99%EF%BC%9Ajava.lang.ClassCastException_%20java.lang.Long%20cannot%20be%20cast%20to%20java.lang.String/",
            "title": "使用StringRedisTemplate报错：java.lang.ClassCastException_ java.lang.Long cannot be cast to java.lang.String",
            "date_published": "2023-09-07T09:59:14.000Z",
            "content_html": "<h2 id=\"1-问题描述\"><a class=\"markdownIt-Anchor\" href=\"#1-问题描述\">#</a> 1、问题描述</h2>\n<p>我在使用 StringRedisTemplate 来存储对象信息的时候，我使用的是 hash 结构，在运行的同时报错：</p>\n<pre><code>java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String\nat org.springframework.data.redis.serializer.StringRedisSerializer.serialize(StringRedisSerializer.java:36) ~[spring-data-redis-2.7.12.jar:2.7.12]\nat org.springframework.data.redis.core.AbstractOperations.rawHashValue(AbstractOperations.java:186) ~[spring-data-redis-2.7.12.jar:2.7.12]\nat org.springframework.data.redis.core.DefaultHashOperations.putAll(DefaultHashOperations.java:209) ~[spring-data-redis-2.7.12.jar:2.7.12]\nat com.hmdp.service.impl.UserServiceImpl.login(UserServiceImpl.java:97) ~[classes/:na]\nat com.hmdp.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$9cac0aa5.invoke(&lt;generated&gt;) ~[classes/:na]\nat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.27.jar:5.3.27]\nat org.springframework.aop.framework.CglibAopProxy.invokeMethod(CglibAopProxy.java:386) ~[spring-aop-5.3.27.jar:5.3.27]\nat org.springframework.aop.framework.CglibAopProxy.access$000(CglibAopProxy.java:85) ~[spring-aop-5.3.27.jar:5.3.27]\nat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:704) ~[spring-aop-5.3.27.jar:5.3.27]\nat com.hmdp.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$c7a7fed4.login(&lt;generated&gt;) ~[classes/:na]\n</code></pre>\n<p>意思是无法将 Long 类型转换为 String 类型，这是为什么呢？</p>\n<h2 id=\"2-出错原因\"><a class=\"markdownIt-Anchor\" href=\"#2-出错原因\">#</a> 2、出错原因：</h2>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220415.jpg\" alt=\"image.png\"></p>\n<h2 id=\"3-如何解决\"><a class=\"markdownIt-Anchor\" href=\"#3-如何解决\">#</a> 3、如何解决？</h2>\n<h3 id=\"方案一可以不使用stringredistemplate-使用redistemplatekeyvalue\"><a class=\"markdownIt-Anchor\" href=\"#方案一可以不使用stringredistemplate-使用redistemplatekeyvalue\">#</a> 方案一：可以不使用 StringRedisTemplate。使用 RedisTemplate&lt;key,value&gt;。</h3>\n<h3 id=\"方案二不使用hutool工具包自己创建新的map类型都是string类型\"><a class=\"markdownIt-Anchor\" href=\"#方案二不使用hutool工具包自己创建新的map类型都是string类型\">#</a> 方案二：不使用 hutool 工具包，自己创建新的 Map，类型都是 String 类型。</h3>\n<h3 id=\"方案三继续使用hutool工具包并转换一下类型\"><a class=\"markdownIt-Anchor\" href=\"#方案三继续使用hutool工具包并转换一下类型\">#</a> 方案三：继续使用 hutool 工具包，并转换一下类型。</h3>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220420.jpg\" alt=\"image.png\"> 在 CopyOptions 中有个方法用于转换类型的:</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220424.jpg\" alt=\"image.png\"></p>\n<p>修改后的代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LoginFormDTO</span> loginForm<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpSession</span> session<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 1、校验手机号、验证码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isPhoneInvalid</span><span class=\"token punctuation\">(</span>loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手机号格式不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">String</span> code <span class=\"token operator\">=</span> stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOGIN_CODE_KEY</span> <span class=\"token operator\">+</span> loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>code<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"验证码不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 2、 根据手机号查询用户</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token function\">getOne</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LambdaQueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token operator\">::</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">,</span> loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// 2.1 用户是否存在，不存在则创建新用户</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            user <span class=\"token operator\">=</span> <span class=\"token function\">createUserWithPhone</span><span class=\"token punctuation\">(</span>loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 3. 生成 token</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token constant\">UUID</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">//4. 保存用户信息到 redis</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">//4.1 将用户转为 hash 格式</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">UserDTO</span> userDTO <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyProperties</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token class-name\">UserDTO</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">//4.2 存储 ，转换为 map 的时候 stringRedisTemplate 要求必须全部都是 String 类型的</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> userMap <span class=\"token operator\">=</span> <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">beanToMap</span><span class=\"token punctuation\">(</span>userDTO<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token class-name\">CopyOptions</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">setIgnoreNullValue</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValueEditor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>filedName<span class=\"token punctuation\">,</span> filedValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> filedValue<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">String</span> tokenKey <span class=\"token operator\">=</span> <span class=\"token constant\">LOGIN_USER_KEY</span> <span class=\"token operator\">+</span> token<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">opsForHash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putAll</span><span class=\"token punctuation\">(</span>tokenKey<span class=\"token punctuation\">,</span> userMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存 map 是不允许存有效期的，我需要先存后设置有效期 StringRedisTemplate 要求存储的值必须都是 String 类型的</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 设置有效期</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        stringRedisTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">expire</span><span class=\"token punctuation\">(</span>tokenKey<span class=\"token punctuation\">,</span> <span class=\"token constant\">LOGIN_USER_TTL</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">//5、返回 token</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/%E6%97%A5%E5%BF%97%E6%8A%A5%E9%94%99_WARNING_%20An%20illegal%20reflective%20access%20operation%20has%20occurred/",
            "url": "https://zrgzs.github.io/guide/2023/09/07/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/%E6%97%A5%E5%BF%97%E6%8A%A5%E9%94%99_WARNING_%20An%20illegal%20reflective%20access%20operation%20has%20occurred/",
            "title": "日志报错_WARNING_ An illegal reflective access operation has occurred",
            "date_published": "2023-09-07T09:59:14.000Z",
            "content_html": "<h2 id=\"1-问题描述\"><a class=\"markdownIt-Anchor\" href=\"#1-问题描述\">#</a> 1、问题描述</h2>\n<p>在起项目的时候遇到代码段的问题，但是不影响我们的程序启动，和调试，但是居然有错误那就应该好好找找看看是问题了。日志信息：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> <span class=\"token class-name\">An</span> illegal reflective access operation has occurred</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Illegal</span> reflective access by <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>toolkit<span class=\"token punctuation\">.</span></span>SetAccessibleAction</span> <span class=\"token punctuation\">(</span>file<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token class-name\">D</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span>development_toops<span class=\"token operator\">/</span>maven<span class=\"token operator\">/</span>maven<span class=\"token operator\">-</span>repository<span class=\"token operator\">/</span>com<span class=\"token operator\">/</span>baomidou<span class=\"token operator\">/</span>mybatis<span class=\"token operator\">-</span>plus<span class=\"token operator\">-</span>core<span class=\"token operator\">/</span><span class=\"token number\">3.4</span><span class=\"token number\">.3</span><span class=\"token operator\">/</span>mybatis<span class=\"token operator\">-</span>plus<span class=\"token operator\">-</span>core<span class=\"token operator\">-</span><span class=\"token number\">3.4</span><span class=\"token number\">.3</span><span class=\"token punctuation\">.</span>jar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">field</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>invoke<span class=\"token punctuation\">.</span></span>SerializedLambda</span><span class=\"token punctuation\">.</span>capturingClass</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Please</span> consider reporting <span class=\"token keyword\">this</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">the</span> maintainers of <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>toolkit<span class=\"token punctuation\">.</span></span>SetAccessibleAction</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Use</span> <span class=\"token operator\">--</span>illegal<span class=\"token operator\">-</span>access<span class=\"token operator\">=</span>warn <span class=\"token keyword\">to</span> <span class=\"token namespace\">enable</span> warnings of further illegal reflective access operations</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> <span class=\"token class-name\">All</span> illegal access operations will be denied in a future release</pre></td></tr></table></figure><p>意思是：这是一个警告信息，表示在程序中发生了非法的反射访问操作。反射是 Java 中的一种机制，允许程序在运行时获取类的信息并操作它们。但是，在某些情况下，反射可能会导致安全问题，因为它可以让程序访问类的私有成员和方法，从而可能导致程序的安全漏洞。因此，为了避免这种情况，Java 引入了安全管理器，用于限制程序对反射的访问权限。如果程序中出现了非法的反射访问操作，就会触发这个警告信息。</p>\n<h2 id=\"2-出错原因\"><a class=\"markdownIt-Anchor\" href=\"#2-出错原因\">#</a> 2、出错原因</h2>\n<p>在 JDK 8 之前 (包括 java8) ，Java 允许通过反射机制访问所有的成员，这些成员的类型包括私有 (private)，公共 (public)，包 (&lt; package &gt;) 和受保护 (protected)。JDK9 新增的功能之一 —— 模块系统对反射的行为做出了一定的限制。从 JDK9 开始，对于非公有的成员、成员方法和构造方法，模块不能通过反射直接去访问，但是 JDK9 提供了一个可选的修饰符 open 来声明一个开放模块，可以从一个开放模块中导出所有的包，以便在运行时对该模块中的所有包中的所有类型进行深层反射来访问。</p>\n<h2 id=\"3-解决问题\"><a class=\"markdownIt-Anchor\" href=\"#3-解决问题\">#</a> 3、解决问题：</h2>\n<h3 id=\"1-方案一\"><a class=\"markdownIt-Anchor\" href=\"#1-方案一\">#</a> 1、方案一</h3>\n<p>降低项目使用的 JDK 版本，从 jdk11-&gt;jdk8 就可以了。<img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220427.jpg\" alt=\"image.png\"></p>\n<h3 id=\"2-方案二\"><a class=\"markdownIt-Anchor\" href=\"#2-方案二\">#</a> 2、方案二</h3>\n<p>** 使用 --illegal-access 参数 **** 通过阅读控制的警告信息，我们能发现：\t**</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Use</span> <span class=\"token operator\">--</span>illegal<span class=\"token operator\">-</span>access<span class=\"token operator\">=</span>warn <span class=\"token keyword\">to</span> <span class=\"token namespace\">enable</span> warnings of further illegal reflective access operations</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token constant\">WARNING</span><span class=\"token operator\">:</span> <span class=\"token class-name\">All</span> illegal access operations will be denied in a future release</pre></td></tr></table></figure><p>他已经说明了使用 Use --illegal -access 参数信息了常见的参数信息为：   其常用的参数值如下：</p>\n<blockquote>\n<p>permit 默认行为，允许通过反射进行访问。当第一次尝试通过反射进行非法访问时会生成一个警告，之后不会再进行警告。<br>\nwarn 与 permit 相同，但每次非法访问时都会产生警告。其大致等效于 “–permit-illegal-access”。<br>\ndebug 每次非法访问产生警告的同时打印非法访问的堆栈跟踪信息。<br>\ndeny 不允许所有的非法访问操作，除了启用其它命令行参数排除的模块，例如 &quot;–add-opens&quot;，这个参数可以参数将某些模块排除出来，让它们能够通过非法反射进行访问</p>\n</blockquote>\n<p>书写方式：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>参数 <span class=\"token operator\">--</span>add<span class=\"token operator\">-</span><span class=\"token keyword\">opens</span>  <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>base</span><span class=\"token operator\">/</span>java<span class=\"token punctuation\">.</span>base模块内的jar包名 <span class=\"token operator\">=</span> <span class=\"token constant\">ALL</span><span class=\"token operator\">-</span><span class=\"token constant\">UNNAMED</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/zrgzs/images@main/images/20230907220430.jpg\" alt=\"image.png\"> 这样修改并不是长久之计：这仅是一种临时解决方案，不建议在生产环境中长期使用。</p>\n<p>3、方案三按照模块化开发的方案来解决，等我学会了模块化开发我再来补充 // TODO</p>\n",
            "tags": []
        }
    ]
}